
###### Correlation Searches ######
[Asset - Asset Ownership Unspecified - Rule]
action.email.sendresults   = 0
action.notable             = 1
## action.summary_index._name present for migration purposes
action.summary_index._name = notable
alert.digest_mode          = 1
alert.suppress             = 1
alert.suppress.fields      = const_dedup_id
alert.suppress.period      = 86300s
alert.track                = false
disabled                   = 1
dispatch.earliest_time     = 0
dispatch.latest_time       = now
enableSched                = 1
cron_schedule              = 0 */12 * * *
is_visible                 = false
schedule_window            = 20
search                     = | datamodel "Identity_Management" "All_Assets" search | where isnotnull('All_Assets.priority') AND len('All_Assets.priority')>0 AND isnotnull('All_Assets.category') AND len('All_Assets.category')>0 AND (isnull('All_Assets.owner') OR len('All_Assets.owner')==0) AND (isnull('All_Assets.ip') OR len('All_Assets.ip')==0 OR mvcount('All_Assets.ip')==1) | stats count | where 'count'>0 | eval const_dedup_id="const_dedup_id"

[Identity - Activity from Expired User Identity - Rule]
action.email.sendresults            = 0
action.risk                         = 1
action.risk.param._risk_object      = user
action.risk.param._risk_object_type = user
action.risk.param._risk_score       = 80
action.notable                      = 1
## action.summary_index._name present for migration purposes
action.summary_index._name          = notable
alert.digest_mode                   = 1
alert.suppress                      = 1
alert.suppress.fields               = user
alert.suppress.period               = 86300s
alert.track                         = false
cron_schedule                       = */5 * * * *
disabled                            = True
dispatch.earliest_time              = rt-5m@m
dispatch.latest_time                = rt+5m@m
dispatch.rt_backfill                = 1
enableSched                         = 1
is_visible                          = false
request.ui_dispatch_app             = SplunkEnterpriseSecuritySuite
search                              = | datamodel "Identity_Management" "Expired_Identity_Activity" search | stats max(_time) as "lastTime",latest(_raw) as "orig_raw",count by "Expired_Identity_Activity.expired_user" | rename "Expired_Identity_Activity.expired_user" as "user"

###### Report Searches ######
[Assets - Assets By Priority]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.timeRangePicker.show      = false
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = pie
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = | pivot Identity_Management All_Assets count(All_Assets) AS "count" SPLITROW priority AS "priority" | sort - count

[Assets - Assets By Business Unit]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.timeRangePicker.show      = false
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = pie
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = | pivot Identity_Management All_Assets count(All_Assets) AS "count" SPLITROW bunit AS "bunit" | sort - count

[Assets - Assets By Category]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.timeRangePicker.show      = false
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = pie
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = | pivot Identity_Management All_Assets count(All_Assets) AS "count" SPLITROW category AS "category" | sort - count

[Assets - Asset Information]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | `datamodel("Identity_Management", "All_Assets")` | `drop_dm_object_name("All_Assets")` | fields dns,nt_host,ip,mac,owner,priority,city,country,lat,long,bunit,category

[Identities - Identities By Priority]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.timeRangePicker.show      = false
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = pie
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = | pivot Identity_Management All_Identities count(All_Identities) AS "count" SPLITROW priority AS "priority" | sort - count

[Identities - Identities By Business Unit]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.timeRangePicker.show      = false
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = pie
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = | pivot Identity_Management All_Identities count(All_Identities) AS "count" SPLITROW bunit AS "bunit" | sort - count

[Identities - Identities By Category]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.timeRangePicker.show      = false
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = pie
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = | pivot Identity_Management All_Identities count(All_Identities) AS "count" SPLITROW category AS "category" | sort - count

[Identities - Identity Information]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | `datamodel("Identity_Management", "All_Identities")` | `drop_dm_object_name("All_Identities")` | `uitime(startDate)` | `uitime(endDate)` | fields identity,prefix,nick,first,last,suffix,email,phone,phone2,managedBy,priority,bunit,category,watchlist,startDate,endDate

[Sessions - Network Sessions Over Time]
action.email.reportServerEnabled                    = 0
alert.track                                         = 0
dispatch.earliest_time                              = -24h@h
dispatch.latest_time                                = now
dispatchAs                                          = user
display.general.enablePreview                       = 1
display.general.type                                = visualizations
display.statistics.rowNumbers                       = 0
display.statistics.wrap                             = 0
display.visualizations.charting.chart               = line
display.visualizations.charting.chart.nullValueMode = zero
display.visualizations.charting.drilldown           = all
display.visualizations.show                         = 1
display.visualizations.type                         = charting
search                                              = | tstats `summariesonly` count from datamodel=Network_Sessions.All_Sessions by _time,nodename span=10m | search nodename!=All_Sessions nodename!=All_Sessions.Session_* | rex field=nodename "All_Sessions.(?<session_type>.*)" | timechart minspan=10m sum(count) as count by session_type

[Sessions - Network Session Details]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -24h@h
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | datamodel Network_Sessions All_Sessions search | `drop_dm_object_name("All_Sessions")` | `unprepend_assets("dest")` | `mvappend_field(src,src_ip)` | `mvappend_field(src,src_mac)` | `mvappend_field(src,src_nt_host)` | `mvappend_field(src,src_dns)` | head 1000 | table _time,src,ip,mac,nt_host,dns,user


##### Context-generating searches #####

##### Email #####
[Identity - Email Activity to Non-corporate Domains by Users Per 1d - Context Gen]
action.email.sendresults   = 0
cron_schedule              = 0 0 * * *
disabled                   = true
dispatch.earliest_time     = -25h@h
dispatch.latest_time       = -1h@h
enableSched                = 1
is_visible                 = false    
schedule_window            = 20
search                     = | tstats `summariesonly` sum(All_Email.size) as bytes, values(All_Email.recipient) as recipient from datamodel=Email.All_Email  where NOT `cim_corporate_email_domain_search("All_Email.recipient")` by _time, All_Email.src_user, All_Email.src_user_bunit span=1h | `drop_dm_object_name("All_Email")` | stats avg(bytes) as avg, stdev(bytes) as stdev, count by src_user_bunit | eval min=0 | eval max=avg + 3*stdev | xsUpdateDDContext name="email_volume_1h_noncorp" class=src_user_bunit scope=app terms=`xs_default_magnitude_concepts` uom="email_volume_bytes" type=domain app=SA-IdentityManagement | stats count

##### Web #####
[Identity - Web Uploads to Non-corporate Domains by Users Per 1d - Context Gen]
action.email.sendresults   = 0
cron_schedule              = 0 1 * * *
disabled                   = true
dispatch.earliest_time     = -25h@h
dispatch.latest_time       = -1h@h
enableSched                = 1
is_visible                 = false
search                     = | tstats `summariesonly` sum(Web.bytes) as bytes from datamodel=Web.Web where NOT(`cim_corporate_web_domain_search("Web.url")`) (Web.http_method="POST" OR Web.http_method="PUT") by _time, Web.user, Web.user_bunit span=1h | `drop_dm_object_name("Web")`| stats avg(bytes) as avg, stdev(bytes) as stdev, count by user_bunit | eval min=0 | eval max=avg + 3*stdev |  xsUpdateDDContext name="web_volume_1h_noncorp" class=user_bunit scope=app terms=`xs_default_magnitude_concepts` uom="web_volume_bytes" type=domain app=SA-IdentityManagement | stats count


##### Lookup-generating searches #####
[Identity - Asset String Matches - Lookup Gen]
enableSched = 0
is_visible  = false
search      = | `asset_sources` | `make_assets_str` | `output_assets("SA-IdentityManagement", "assets_by_str.csv")`

[Identity - Asset CIDR Matches - Lookup Gen]
enableSched = 0
is_visible  = false
search      = | `asset_sources` | `make_assets_cidr` | `output_assets("SA-IdentityManagement", "assets_by_cidr.csv")`

[Identity - Identity Matches - Lookup Gen]
enableSched = 0
is_visible  = false
search      = | `identity_sources` | `make_identities` | `output_identities("SA-IdentityManagement", "identities_expanded.csv")`

[Identity - Make Categories - Lookup Gen]
enableSched = 0
is_visible  = false
search      = | inputlookup category_lookup | fillnull value="static" category_source | inputlookup append=t asset_lookup_by_str | inputlookup append=t asset_lookup_by_cidr | fillnull value="asset" category_source | inputlookup append=t identity_lookup_expanded | fillnull value="identity" category_source | stats count by category, category_source | sort category, category_source | fields category category_source | outputlookup category_lookup | stats count

[Identity - Make PCI Domains - Lookup Gen]
enableSched = 0
is_visible  = false
search      = | inputlookup pci_domains_lookup | fillnull value="static" pci_domain_source | inputlookup append=t asset_lookup_by_str | inputlookup append=t asset_lookup_by_cidr | fillnull value="asset" pci_domain_source | stats count by pci_domain, pci_domain_source | sort pci_domain, pci_domain_source | fields pci_domain pci_domain_source | outputlookup pci_domains_lookup | stats count
