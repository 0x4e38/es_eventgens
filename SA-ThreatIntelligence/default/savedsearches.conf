
###### Administrative Searches ######
[Threats - Disable Suppressions - Administrative]
cron_schedule = 0 3 * * *
enableSched = 1
is_visible = false
search = | rest splunk_server=local count=0 /services/alerts/suppressions/-/_autodisable
run_on_startup = true

[Threat - Refresh Governance - Administrative]
cron_schedule = 0 * * * *
enableSched = 1
is_visible = false
search = | rest splunk_server=local count=0 /services/alerts/governance/_reload
run_on_startup = true

[Threat - Refresh Reviewstatuses - Administrative]
cron_schedule = 0 * * * *
enableSched = 1
is_visible = false
search = | rest splunk_server=local count=0 /services/alerts/reviewstatuses/_reload
run_on_startup = true

[Threat - Refresh Correlation Searches - Administrative]
cron_schedule = * * * * *
enableSched = 1
is_visible = false
search = | rest splunk_server=local count=0 /services/alerts/correlationsearches/_reload
run_on_startup = true

###### Context Generators ######
[Risk - Median Object Risk Per Day - Context Gen]
action.email.sendresults   = 0
cron_schedule              = 0 0 * * *
disabled                   = False
dispatch.earliest_time     = -30d@d
dispatch.latest_time       = @d
enableSched                = 1
is_visible                 = false    
schedule_window            = 20
search                     = | tstats `summariesonly` sum(All_Risk.risk_score) as object_risk from datamodel=Risk.All_Risk by _time,All_Risk.risk_object,All_Risk.risk_object_type span=1d | `drop_dm_object_name("All_Risk")` | `context_stats(object_risk, risk_object_type)` | eval min=0 | eval max=median*2 | xsUpdateDDContext app=SA-ThreatIntelligence name=median_object_risk_by_object_type_1d container=risk class=risk_object_type type=domain scope=app | stats count

[Risk - Total Risk By Risk Object Type Per Day - Context Gen]
action.email.sendresults   = 0
cron_schedule              = 0 1 * * *
disabled                   = False
dispatch.earliest_time     = -30d@d
dispatch.latest_time       = @d
enableSched                = 1
is_visible                 = false 
schedule_window            = 20
search                     = | tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk by _time,All_Risk.risk_object_type span=1d | `drop_dm_object_name("All_Risk")` | `context_stats(accum_risk, risk_object_type)` | eval min=0 | eval max=median*2 | xsUpdateDDContext app=SA-ThreatIntelligence name=total_risk_by_object_type_1d container=risk class=risk_object_type type=domain scope=app | stats count

###### Correlation Searches ######
## SOLNESS-6161: Notable Event Audit Notifications
## Use Case: Please alert me (the SOC team manager) when any NEs are created that remain unassigned (i.e. in "New" status) for longer than 4 hours
## The key here is the dispatch times.  latest_time=-4h@h ensures that everything is at least 4 hours old
## From there we filter for status_group="New" OR owner="unassigned"
## Prepend result fields with orig_ in case the notable event action is enabled for this correlation
## No alert actions enabled by default
[Audit - Untriaged Notable Events - Rule]
action.email.sendresults   = 0
alert.digest_mode          = 1
alert.suppress             = 1
alert.suppress.fields      = orig_rule_id
alert.suppress.period      = 86300s
alert.track                = false
cron_schedule              = 35 * * * *
disabled                   = True
dispatch.earliest_time     = -48h@h
dispatch.latest_time       = -4h@h
enableSched                = 1
is_visible                 = false
search                     = `notable` | search (status_group="New" OR owner="unassigned") | table _time,rule_id,rule_name,status_label,owner | rename * as orig_*

[Threat - Same Error On Many Systems - Rule]
action.email.sendresults   = 0
action.notable             = 1
## action.summary_index._name present for migration purposes
action.summary_index._name = notable
alert.digest_mode          = 1
alert.suppress             = 1
alert.suppress.fields      = sourcetype
alert.suppress.period      = 86300s
alert.track                = false
cron_schedule              = 40 * * * *
disabled                   = True
dispatch.earliest_time     = -65m@m
dispatch.latest_time       = -5m@m
enableSched                = 1
is_visible                 = false
search                     = tag=error NOT tag=authentication | stats first(_raw) as orig_raw,dc(host) as system_count by sourcetype,punct | where 'system_count'>100

[Threat - Watchlisted Events - Rule]
action.email.sendresults            = 0
action.risk                         = 1
action.risk.param._risk_object      = host
action.risk.param._risk_object_type = system
action.risk.param._risk_score       = 80
action.notable                      = 1
## action.summary_index._name present for migration purposes
action.summary_index._name          = notable
alert.digest_mode                   = 1
alert.suppress                      = 1
alert.suppress.fields               = suppression_value
alert.suppress.period               = 86300s
alert.track                         = false
cron_schedule                       = */5 * * * *
disabled                            = True
dispatch.earliest_time              = rt-5m@m
dispatch.latest_time                = rt+5m@m
dispatch.rt_backfill                = 1
enableSched                         = 1
is_visible                          = false
search                              = tag=watchlist NOT sourcetype=stash | eval risk_object=case(isnotnull(user),user,isnotnull(src_user),src_user,isnotnull(dest),dest,isnotnull(src),src,1=1,host) | eval risk_object_type=case(isnotnull(user),"user",isnotnull(src_user),"user",isnotnull(dest),"system",isnotnull(src),"system",1=1,"system") | eval risk_score=if(eventtype="website_watchlist",50,null()) | eval suppression_value=sourcetype."|".risk_object  | `get_event_id` | table _raw,event_id,host,source,sourcetype,src,dest,dvc,src_user,user

###### Key Indicator Searches ######
[Risk - Distinct Risk Object Count]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Distinct Risk Objects
action.keyindicator.subtitle                  = Object Count
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = risk_analysis
action.keyindicator.group.0.order             = 1
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Distinct Risk Object Count
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` estdc("All_Risk.risk_object") as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s | appendcols [|tstats `summariesonly` estdc("All_Risk.risk_object") as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h] | `get_delta` | fields current_count,*

[Risk - Distinct Risk Object Count By System]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Distinct Risk System Objects
action.keyindicator.subtitle                  = System Object Count
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = 
action.keyindicator.group.0.order             =
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Distinct System Count
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` estdc(All_Risk.risk_object) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type=system by "All_Risk.risk_object_type" | appendcols [| tstats `summariesonly` estdc(All_Risk.risk_object) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type=system by "All_Risk.risk_object_type"] | `get_delta` | fields current_count,*

[Risk - Distinct Risk Object Count By User]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Distinct Risk User Objects
action.keyindicator.subtitle                  = User Object Count
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = 
action.keyindicator.group.0.order             =
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Distinct User Count
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` estdc(All_Risk.risk_object) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type=user by All_Risk.risk_object_type | appendcols [| tstats `summariesonly` estdc(All_Risk.risk_object) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type=user by All_Risk.risk_object_type] | `get_delta` | fields current_count,*

[Risk - Distinct Risk Object Count By Other]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Distinct Risk Other Objects
action.keyindicator.subtitle                  = Other Object Count
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = 
action.keyindicator.group.0.order             =
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Distinct Other Object Count
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` estdc(All_Risk.risk_object) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type=other by All_Risk.risk_object_type | appendcols [| tstats `summariesonly` estdc(All_Risk.risk_object) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type=other by All_Risk.risk_object_type] | `get_delta` | fields current_count,*

[Risk - Median Risk Score]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Median Risk Score
action.keyindicator.subtitle                  = Overall Median Risk
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = risk_analysis
action.keyindicator.group.0.order             = 2
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Median Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s by All_Risk.risk_object | stats median(accum_risk) as current_count | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h by All_Risk.risk_object | stats median(accum_risk) as historical_count] | `get_ksi_fields(current_count, historical_count)` | xsfindbestconcept current_count FROM median_object_risk_by_object_type_1d IN risk as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Median Risk Score By System]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Median System Risk
action.keyindicator.subtitle                  = System Risk
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = 
action.keyindicator.group.0.order             =
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Median Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type="system" by All_Risk.risk_object, All_Risk.risk_object_type | stats median(accum_risk) as current_count | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type="system" by All_Risk.risk_object, All_Risk.risk_object_type | stats median(accum_risk) as historical_count] | eval risk_object_type="system" | `get_ksi_fields(current_count, historical_count)` | `drop_dm_object_name("All_Risk")` | xsfindbestconcept current_count FROM median_object_risk_by_object_type_1d IN risk BY risk_object_type as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Median Risk Score By User]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Median User Risk
action.keyindicator.subtitle                  = User Risk
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = 
action.keyindicator.group.0.order             =
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Median Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type="user" by All_Risk.risk_object, All_Risk.risk_object_type | stats median(accum_risk) as current_count | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type="user" by All_Risk.risk_object, All_Risk.risk_object_type | stats median(accum_risk) as historical_count] | eval risk_object_type="user" | `get_ksi_fields(current_count, historical_count)` | `drop_dm_object_name("All_Risk")` | xsfindbestconcept current_count FROM median_object_risk_by_object_type_1d IN risk BY risk_object_type as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Median Risk Score By Other]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Median Other Risk
action.keyindicator.subtitle                  = Other Object Risk
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = 
action.keyindicator.group.0.order             =
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Median Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type="other" by All_Risk.risk_object, All_Risk.risk_object_type | stats median(accum_risk) as current_count | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as accum_risk from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type="other" by All_Risk.risk_object, All_Risk.risk_object_type | stats median(accum_risk) as historical_count] | eval risk_object_type="other" | `get_ksi_fields(current_count, historical_count)` | `drop_dm_object_name("All_Risk")` | xsfindbestconcept current_count FROM median_object_risk_by_object_type_1d IN risk BY risk_object_type as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Aggregated Risk]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Aggregated Risk
action.keyindicator.subtitle                  = Total Risk
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = 
action.keyindicator.group.0.order             =
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Aggregated Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h] | `get_ksi_fields(current_count, historical_count)` | xsfindbestconcept current_count FROM total_risk_by_object_type_1d IN risk as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Aggregated System Risk]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Aggregated System Risk
action.keyindicator.subtitle                  = Total System Risk
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = risk_analysis
action.keyindicator.group.0.order             = 3
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Aggregated Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type="system" by All_Risk.risk_object_type | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type="system" by All_Risk.risk_object_type] | `get_ksi_fields(current_count, historical_count)` | `drop_dm_object_name("All_Risk")` | xsfindbestconcept current_count FROM total_risk_by_object_type_1d IN risk BY risk_object_type as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Aggregated User Risk]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Aggregated User Risk
action.keyindicator.subtitle                  = Total User Risk
action.keyindicator.value                     = current_count
action.keyindicator.drilldown_uri             = user_activity
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = risk_analysis
action.keyindicator.group.0.order             = 4
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Aggregated Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type="user" by All_Risk.risk_object_type | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type="user" by All_Risk.risk_object_type] | `get_ksi_fields(current_count, historical_count)` | `drop_dm_object_name("All_Risk")` | xsfindbestconcept current_count FROM total_risk_by_object_type_1d IN risk BY risk_object_type as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Aggregated Other Risk]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Aggregated Other Risk
action.keyindicator.subtitle                  = Total Other Risk
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = risk_analysis
action.keyindicator.group.0.order             = 5
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Aggregated Risk
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` sum(All_Risk.risk_score) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s All_Risk.risk_object_type="other" by All_Risk.risk_object_type | appendcols [| tstats `summariesonly` sum(All_Risk.risk_score) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h All_Risk.risk_object_type="other" by All_Risk.risk_object_type] | `get_ksi_fields(current_count, historical_count)` | `drop_dm_object_name("All_Risk")` | xsfindbestconcept current_count FROM total_risk_by_object_type_1d IN risk BY risk_object_type as current_count_qual | xsfindbestconcept delta FROM percentile in default as delta_qual

[Risk - Distinct Modifier Sources]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Distinct Modifier Sources
action.keyindicator.subtitle                  = Source Count
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = delta
action.keyindicator.invert                    = false
action.keyindicator.group.0.name              = risk_analysis
action.keyindicator.group.0.order             = 0
dispatch.earliest_time                        = -48h@h
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Modifier Sources
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | tstats `summariesonly` estdc(source) as current_count from datamodel=Risk.All_Risk where earliest=-24h@h latest=+0s | appendcols[| tstats `summariesonly` estdc(source) as historical_count from datamodel=Risk.All_Risk where earliest=-48h@h latest=-24h@h] | `get_delta`

###### Lookup Generating Searches ######
[Threat - Notable Owners - Lookup Gen]
cron_schedule            = */10 * * * *
disabled                 = False
dispatch.latest_time     = +0s
enableSched              = 1
is_visible               = false
run_on_startup           = true
search                   = | rest splunk_server=local count=0 /services/authentication/users | search capabilities="can_own_notable_events" | rename title as owner | append [| makeresults | eval owner="unassigned" ] | eval _key=owner | eval realname=if(isnull(realname) or realname="", null(), realname) | table _key owner realname | outputlookup notable_owners_lookup | stats count

[Threat - Risk Correlation By System - Lookup Gen]
cron_schedule            = */30 * * * *
disabled                 = False
dispatch.earliest_time   = -24h@h
dispatch.latest_time     = +0s
enableSched              = 1
is_visible               = false
run_on_startup           = false
search                   = | tstats allow_old_summaries=true sum(All_Risk.risk_score) as risk_score from datamodel=Risk.All_Risk where All_Risk.risk_object_type="system" by All_Risk.risk_object | eval dest=lower('All_Risk.risk_object') | `get_asset(dest)` | eval dest=if(isnotnull(dest_asset_id),mvappend(dest,NULL,lower(dest_mac)),dest),dest=if(isnotnull(dest_asset_id),mvappend(dest,NULL,lower(dest_nt_host)),dest),dest=if(isnotnull(dest_asset_id),mvappend(dest,NULL,lower(dest_dns)),dest) | stats sum(risk_score) as risk_score by dest | rename dest as risk_object | outputlookup risk_correlation_by_system_lookup | stats count

[Threat - Risk Correlation By User - Lookup Gen]
cron_schedule            = */30 * * * *
disabled                 = False
dispatch.earliest_time   = -24h@h
dispatch.latest_time     = +0s
enableSched              = 1
is_visible               = false
run_on_startup           = false
search                   = | tstats allow_old_summaries=true sum(All_Risk.risk_score) as risk_score from datamodel=Risk.All_Risk where All_Risk.risk_object_type="user" by All_Risk.risk_object | eval user=lower('All_Risk.risk_object') | `get_identity4events(user)` | eval risk_object=if(isnotnull(user_identity),lower(user_identity),user) | stats sum(risk_score) as risk_score by risk_object | outputlookup risk_correlation_by_user_lookup | stats count

###### Report Searches ######
[Audit - Correlations Missing Savedsearches]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | rest splunk_server=local count=0 /services/alerts/correlationsearches | fields title | join type=outer title [| rest splunk_server=local count=0 /services/saved/searches | fields title | eval savedsearch_title=title] | where isnull(savedsearch_title) AND title!="Manual Notable Event - Rule"

[Incident Review - Activity By Reviewer Over Time] 
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.latest_time                      = now
dispatchAs                                = user
display.general.enablePreview             = 1
display.general.timeRangePicker.show      = false
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = column
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
display.visualizations.type               = charting
search                                    = | `incident_review` | timechart useother=`useother` count by reviewer_realname

[Incident Review - Notable Events By Status]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.earliest_time                    = -24h@h
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = bar
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = `notable` | search NOT `suppression` | stats count by status_label | rename status_label as status | sort 10 - count

[Incident Review - Notable Events By Owner]
action.email.reportServerEnabled          = 0
alert.track                               = 0
dispatch.earliest_time                    = -24h@h
dispatch.latest_time                      = now
display.general.enablePreview             = 1
display.general.type                      = visualizations
display.statistics.rowNumbers             = 0
display.statistics.wrap                   = 0
display.visualizations.charting.chart     = bar
display.visualizations.charting.drilldown = all
display.visualizations.show               = 1
search                                    = `notable` | search NOT `suppression` | chart count over owner by urgency | `sort_chart`

[Incident Review - Mean Time To Closure]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -60d@d
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | tstats `summariesonly` earliest(_time) as _time from datamodel=Incident_Management.Notable_Events_Meta  by source,Notable_Events_Meta.rule_id | `drop_dm_object_name("Notable_Events_Meta")` | `get_correlations` | `get_current_status` | search status_label="Closed" | eval ttc=mvindex(review_time, 0) | eval ttc=ttc-_time | stats count avg(ttc) as avg_ttc,max(ttc) as max_ttc by rule_name | sort - avg_ttc | `uptime2string(avg_ttc, avg_ttc)` | `uptime2string(max_ttc, max_ttc)` | rename *_ttc* as *(time_to_closure)* | fields - *_dec

[Incident Review - Mean Time To Triage]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -14d@d
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | tstats `summariesonly` earliest(_time) as _time from datamodel=Incident_Management.Notable_Events_Meta  by source,Notable_Events_Meta.rule_id | `drop_dm_object_name("Notable_Events_Meta")` | `get_correlations` | join rule_id [| inputlookup append=T incident_review_lookup | eval _time=time | stats earliest(_time) as review_time by rule_id] | eval ttt=review_time-_time | stats count,avg(ttt) as avg_ttt,max(ttt) as max_ttt by rule_name | sort - avg_ttt | `uptime2string(avg_ttt, avg_ttt)` | `uptime2string(max_ttt, max_ttt)` | rename *_ttt* as *(time_to_triage)* | fields - *_dec

[Incident Review - Top Reviewers]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | `incident_review` | stats sparkline,count,min(_time) as firstTime,max(_time) as lastTime by reviewer_realname | `uitime(firstTime)` | `uitime(lastTime)` | sort 100 - count

[Incident Review - Recent Review Activity]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | `incident_review` | rename status_label as status | sort 100 - _time | table _time,rule_id,status,rule_name,owner_realname,comment,reviewer_realname

[Risk - Risk Modifiers Over Time]
action.email.reportServerEnabled                    = 0
alert.track                                         = 0
dispatch.earliest_time                              = -24h@h
dispatch.latest_time                                = now
dispatchAs                                          = user
display.general.enablePreview                       = 1
display.general.type                                = visualizations
display.statistics.rowNumbers                       = 0
display.statistics.wrap                             = 0
display.visualizations.charting.chart               = column
display.visualizations.charting.axisY2.enabled      = 1
display.visualizations.charting.chart.overlayFields = count
display.visualizations.charting.legend.placement    = bottom
display.visualizations.charting.drilldown           = all
display.visualizations.show                         = 1
display.visualizations.type                         = charting
search                                              = | tstats prestats=true allow_old_summaries=`allow_old_summaries_bool` sum(All_Risk.risk_score),count from datamodel=Risk.All_Risk by _time span=10m | timechart minspan=10m sum(All_Risk.risk_score) as risk_score,count

[Risk - Risk Score By Business Unit]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -24h@h
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | tstats allow_old_summaries=`allow_old_summaries_bool` sum(All_Risk.risk_score) as risk_score from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type | `drop_dm_object_name("All_Risk")` | eval dest=if(risk_object_type=="system",risk_object,null()) | eval user=if(risk_object_type=="user",risk_object,null()) | `get_asset(dest)` | `get_identity4events(user)` | `mvappend_field(dest_bunit,user_bunit)` | stats sum(risk_score) as risk_score,dc(risk_object) by dest_bunit | eval avg_score=floor('risk_score'/'dc(risk_object)') | rename dest_bunit as bunit

[Risk - Risk Score By Object]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -24h@h
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | tstats allow_old_summaries=`allow_old_summaries_bool` sum(All_Risk.risk_score) as risk_score,dc(source) as source_count,count from datamodel=Risk.All_Risk by All_Risk.risk_object,All_Risk.risk_object_type | `drop_dm_object_name("All_Risk")` | sort 1000 - risk_score

[Risk - Most Active Sources]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -24h@h
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | tstats allow_old_summaries=`allow_old_summaries_bool` sum(All_Risk.risk_score) as risk_score,dc(All_Risk.risk_object) as risk_objects,count from datamodel=Risk.All_Risk by source | sort 1000 - count,risk_score

[Risk - Recent Risk Modifiers]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -24h@h
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | `datamodel("Risk","All_Risk")` | head 1000 | `drop_dm_object_name("All_Risk")` | table _time risk_object risk_object_type source description risk_score

[Suppressions - Currently Suppressed Events Over Time]
action.email.reportServerEnabled                    = 0
alert.track                                         = 0
dispatch.earliest_time                              = -24h@h
dispatch.latest_time                                = now
dispatchAs                                          = user
display.general.enablePreview                       = 1
display.general.type                                = visualizations
display.statistics.rowNumbers                       = 0
display.statistics.wrap                             = 0
display.visualizations.charting.chart               = line
display.visualizations.charting.chart.nullValueMode = zero
display.visualizations.charting.drilldown           = all
display.visualizations.show                         = 1
display.visualizations.type                         = charting
search                                              = `suppressed_notables` | timechart minspan=10m count by rule_name

[Suppressions - Suppression History Over Time]
action.email.reportServerEnabled                    = 0
alert.track                                         = 0
dispatch.earliest_time                              = -30d@d
dispatch.latest_time                                = now
dispatchAs                                          = user
display.general.enablePreview                       = 1
display.general.type                                = visualizations
display.statistics.rowNumbers                       = 0
display.statistics.wrap                             = 0
display.visualizations.charting.chart               = line
display.visualizations.charting.chart.nullValueMode = zero
display.visualizations.charting.drilldown           = all
display.visualizations.show                         = 1
display.visualizations.type                         = charting
search                                              = index=notable_summary source="Threat - Suppressed Notables - Summary Gen" | timechart minspan=1d sum(count) as count by rule_name

[Suppressions - Suppression Management Activity]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -7d@d
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = `suppression_audit` | table _time suppression action status user

[Suppressions - Expired Suppressions]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -7d@d
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = `suppression_audit-expired` | eval raw=_raw | table _time suppression raw

###### Summary Generating Searches ######
[Threat - Suppressed Notables - Summary Gen]
action.email.sendresults   = 0
action.summary_index       = 1
action.summary_index._name = notable_summary
cron_schedule              = 55 0,6,12,18 * * *
dispatch.earliest_time     = -365m@m
dispatch.latest_time       = -5m@m
enableSched                = 1
is_visible                 = false
schedule_window            = 10
search                     = `suppressed_notables` | stats count by security_domain, rule_name, urgency, suppression

###### Swim Lane Searches ######
[Threat - All Notable Events By Asset - Swimlane]
action.email.reportServerEnabled                  = 0
action.swimlane                                   = 1
action.swimlane.title                             = Notable Events
action.swimlane.color                             = yellow
action.swimlane.constraint_method                 = reverse_asset_lookup
action.swimlane.constraint_fields                 = orig_host,dvc,src,dest
action.swimlane.drilldown_search                  = $constraints$ `notable`
alert.track                                       = 0
dispatch.latest_time                              = now
display.page.asset_investigator.0.collection_name = Default
display.page.asset_investigator.0.order           = 5
is_visible                                        = false
search                                            = $constraints$ `notable` | bucket _time span=$span$ | stats values(rule_name) as rule_name,values(urgency) as urgency,values(src) as src,values(dest) as dest,count by _time

[Threat - All Notable Events By Identity - Swimlane]
action.email.reportServerEnabled                     = 0
action.swimlane                                      = 1
action.swimlane.title                                = Notable Events
action.swimlane.color                                = yellow
action.swimlane.constraint_method                    = reverse_identity_lookup
action.swimlane.constraint_fields                    = src_user,user
action.swimlane.drilldown_search                     = $constraints$ `notable`
alert.track                                          = 0
dispatch.latest_time                                 = now
display.page.identity_investigator.0.collection_name = Default
display.page.identity_investigator.0.order           = 5
is_visible                                           = false
search                                               = $constraints$ `notable` | bucket _time span=$span$ | stats values(rule_name) as rule_name,values(urgency) as urgency,values(src) as src,values(dest) as dest,count by _time

[Threat - All Risk Modifiers By Asset - Swimlane]
action.email.reportServerEnabled                  = 0
action.swimlane                                   = 1
action.swimlane.title                             = Risk Modifiers
action.swimlane.color                             = blue
action.swimlane.constraint_method                 = reverse_asset_lookup
action.swimlane.constraint_fields                 = All_Risk.risk_object
action.swimlane.drilldown_search                  = | tstats sum(All_Risk.risk_score) as risk_score from datamodel=Risk.All_Risk where $constraints$ by source | sort - risk_score
alert.track                                       = 0
dispatch.latest_time                              = now
display.page.asset_investigator.0.collection_name = Default
display.page.asset_investigator.0.order           = 6
is_visible                                        = false
search                                            = | tstats values(source) as source,values(All_Risk.risk_object) as risk_object,sum(All_Risk.risk_score) as count from datamodel=Risk.All_Risk where $constraints$ by _time span=$span$ | eval risk_score=count

[Threat - All Risk Modifiers By Identity - Swimlane]
action.email.reportServerEnabled                  = 0
action.swimlane                                   = 1
action.swimlane.title                             = Risk Modifiers
action.swimlane.color                             = blue
action.swimlane.constraint_method                 = reverse_identity_lookup
action.swimlane.constraint_fields                 = All_Risk.risk_object
action.swimlane.drilldown_search                  = | tstats sum(All_Risk.risk_score) as risk_score from datamodel=Risk.All_Risk where $constraints$ by source | sort - risk_score
alert.track                                       = 0
dispatch.latest_time                              = now
display.page.identity_investigator.0.collection_name = Default
display.page.identity_investigator.0.order           = 6
is_visible                                        = false
search                                            = | tstats values(source) as source,values(All_Risk.risk_object) as risk_object,sum(All_Risk.risk_score) as count from datamodel=Risk.All_Risk where $constraints$ by _time span=$span$ | eval risk_score=count
