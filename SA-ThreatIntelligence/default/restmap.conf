
###### REST /alerts grouping ######
[admin:alerts_threatintel]
match=/alerts
members=correlationsearches,governance,reviewstatuses,suppressions,log_review

## Correlation Searches Handler
[admin_external:correlationsearches]
handlertype = python
handlerfile = correlationsearches_rest_handler.py
handleractions = list,edit,create,remove,_reload
handlerpersistentmode = true

[eai:conf-correlationsearches]
capability.write = edit_correlationsearches

## Governance Handler
[admin_external:governance]
handlertype = python
handlerfile = governance_rest_handler.py
handleractions = list,edit,create,remove,_reload
handlerpersistentmode = true

[eai:conf-governance]
capability.write = edit_correlationsearches

## Log review configuration handler
[admin_external:log_review]
handlertype = python
handlerfile = log_review_rest_handler.py
handleractions = list,edit,_reload
handlerpersistentmode = true

[eai:conf-log_review]
capability.write = edit_log_review_settings

## Review Statuses Handler
[admin_external:reviewstatuses]
handlertype = python
handlerfile = reviewstatuses_rest_handler.py
handleractions = list,edit,create,_reload
handlerpersistentmode = true

[eai:conf-reviewstatuses]
capability.write = edit_reviewstatuses

[eai:conf-authorize]
capability.write = edit_reviewstatuses

## Suppression Handler
[admin_external:suppressions]
handlertype = python
handlerfile = suppressions_rest_handler.py
handleractions = list,edit,create,remove,_reload
handlerpersistentmode = true

[eai:conf-suppressions]
capability.write = edit_suppressions


###### REST /transitions grouping ######
[admin:transitions_threatintel]
match=/alerts/transitions
members=transitions:capabilities,transitioners:roles

[admin_external:transitions]
handlertype = python
handlerfile = transitions_rest_handler.py
handleractions = list,_reload
handlerpersistentmode = true

[admin_external:transitioners]
handlertype = python
handlerfile = transitioners_rest_handler.py
handleractions = list,edit,_reload
handlerpersistentmode = true

[eai:conf-transitioners]
capability.write = edit_reviewstatuses


###### REST notable update ######
[script:notable_update]
match = /notable_update
script = notable_update_rest_handler.py
scripttype=persist
handler=notable_update_rest_handler.NotableEventUpdate
requireAuthentication = true
capability=edit_notable_events
output_modes=json


###### Validation ######
[validation:savedsearch]
action.risk.param._risk_score = validate( isint('action.risk.param._risk_score'), "Risk Score is invalid")
