"use strict";define(["underscore","backbone","splunkjs/mvc","splunkjs/mvc/utils","splunkjs/mvc/tokenutils","jquery","splunkjs/mvc/simplesplunkview","bootstrap.dropdown","css!sa-utils/css/ToggleInputView.css"],function(a,b,c,d,e,f,g){var h=g.extend({className:"ToggleInputView",defaults:{includeInput:!1,defaultValue:"Please Select",selections:[],selected:null,textValue:"",selectionElements:null,tokenPrefix:"",tokenNamespace:null,defaultTokenValue:""},events:{"click .toggle-option":"selectOptionHandler","change .toggler-input":"inputChangeHandler"},template:'<% if(includeInput) { %><div class="input-prepend"><% } %>         \t    <div class="btn-group toggler">             \t\t<button class="btn dropdown-toggle toggler-btn" data-toggle="dropdown">             \t\t\t<span class="selected-item"><%- defaultValue %></span>             \t\t\t<span class="caret"></span>             \t\t</button>             \t\t<ul class="dropdown-menu">         \t\t\t<% for (var c = 0; c < selections.length; c++) { %>             \t\t\t<li><a href="#" class="toggle-option"><%- selections[c] %></a></li>         \t\t\t<% } %>             \t\t</ul>             \t</div>         \t<% if(includeInput){ %><input class="toggler-input" type="text" /></div><% } %>',initialize:function(){if(this.options=a.extend({},this.defaults,this.options),options=this.options||{},this.selections=options.selections,this.includeInput=options.includeInput,this.defaultValue=options.defaultValue,this.selectionElements=options.selectionElements,this.selected=options.selected,this.tokenPrefix=options.tokenPrefix,this.tokenNamespace=options.tokenNamespace,this.defaultTokenValue=options.defaultTokenValue,this.textValue=options.textValue,(!this.selections||0===this.selections.length)&&this.selectionElements){this.selections=[];for(var b in this.selectionElements)this.selections.push(b)}null!==this.selected&&this.setSelected(this.selected)},formatTokenName:function(a){return this.tokenPrefix+a.replace(" ","_").toLowerCase()},getPossibleTokens:function(){for(var a=[],b=0;b<this.selections.length;b++)a.push(this.formatTokenName(this.selections[b]));return a},getActiveToken:function(){return this.formatTokenName(this.selected)},updateTokens:function(){if(this.tokenNamespace){for(var a=c.Components.getInstance(this.tokenNamespace),b=this.getPossibleTokens(),d=this.getActiveToken(),e=this.textVal(),f=0;f<b.length;f++)d===b[f]?(a.set(d,e),console.info("Setting active token '"+d+"' to '"+e+"'")):a.set(b[f],this.defaultTokenValue);console.info("Tokens have been updated")}},inputChangeHandler:function(a){this.trigger("change:input",a.target.value,this.val()),this.updateTokens()},selectOptionHandler:function(a){this.setSelected(a.currentTarget.innerText),this.updateTokens()},resetSelected:function(){this.setSelected(this.selected)},setSelected:function(a){this.selected=a,f(".selected-item",this.$el).text(a),this.showElementsForSelection(a),this.trigger("change",a)},hideAllElements:function(){for(var a in this.selectionElements)for(var b=0;b<this.selectionElements[a].length;b++)f(this.selectionElements[a][b]).hide()},showElementsForSelection:function(a){if(this.selectionElements){if(this.hideAllElements(),!this.selectionElements[a])return void console.warn("Was asked to show elements for a selection I know nothing about: "+a);for(var b=0;b<this.selectionElements[a].length;b++)f(this.selectionElements[a][b]).show()}},val:function(){return this.selected},textVal:function(){return f(".toggler-input",this.$el).val()},setTextVal:function(a){f(".toggler-input",this.$el).val(a),this.updateTokens()},render:function(){this.$el.html(a.template(this.template,{includeInput:this.includeInput,selections:this.selections,defaultValue:this.defaultValue})),this.defaultValue&&this.setSelected(this.defaultValue),this.textValue&&this.setTextVal(this.textValue)}});return h});