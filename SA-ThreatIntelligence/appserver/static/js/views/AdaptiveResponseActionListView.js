"use strict";require.config({paths:{"sa-threatintelligence":"../app/SA-ThreatIntelligence"}}),define(["underscore","backbone","splunkjs/mvc","splunkjs/mvc/searchmanager","jquery","splunkjs/mvc/simplesplunkview","splunkjs/mvc/sharedmodels","css!sa-threatintelligence/css/AdaptiveResponseActionListView.css"],function(a,b,c,d,e,f,g){var h=f.extend({className:"AdaptiveResponseActionListView",defaults:{sid:null,rid:null,max_results:10,results_drilldown_uri:"search?earliest=$earliest$&latest=$latest$&q=tag%3Dmodaction_result orig_sid=$sid$ orig_rid=$rid$ orig_action_name=$action_name$",introspection_drilldown_uri:"search?earliest=$earliest$&latest=$latest$&q=tag%3Dmodaction (sid=$sid$ rid=$rid$) OR (orig_sid=$sid$ orig_rid=$rid$)"},initialize:function(){var c=this;this.options=a.extend({},this.defaults,this.options),this.sid=this.options.sid,this.rid=this.options.rid,this.earliest=this.options.earliest,this.max_results=this.options.max_results,this.results_drilldown_uri=this.options.results_drilldown_uri,this.introspection_drilldown_uri=this.options.introspection_drilldown_uri,this.entries=[],this.error_message=null,this.performing_search=!1,this.results_sid=null,this.search=null,this.sid&&this.rid&&(e.when(this.fetchActionsForNotable(this.sid,this.rid)).done(function(a){c.gotActions()}).fail(function(a){c.render()}),this.listenTo(b,"refresh-action-response:"+this.rid+":"+this.sid,this.refresh.bind(this)))},fetchActionsForNotable:function(a,b){var c=this,d=e.Deferred(),f={output_mode:"json",sid:a,rid:b},g=Splunk.util.make_url("/splunkd/__raw/alerts/modaction_invocations");return g+="?"+Splunk.util.propToQueryString(f),this.sid=a,this.rid=b,this.performing_search=!0,this.render(),e.ajax({url:g,type:"GET",success:function(a){c.performing_search=!1,c.search=a.search,c.results_sid=a.search_id,void 0!==a&&a.success===!0&&a.responses.length>0?(c.entries=a.responses,d.resolve(a)):d.reject("No Adaptive Responses found")},error:function(a){function b(b,c,d){return a.apply(this,arguments)}return b.toString=function(){return a.toString()},b}(function(a,b,e){c.performing_search=!1,c.error_message=error,d.reject("Unable to load the adaptive responses")})}),d},loadDemoModels:function(){var a=new Date(0);a.setUTCSeconds(1467838428),this.entries=[{status:"running",action_mode:"saved",action_label:"Demo",user:"admin",_time:a},{status:"success",action_mode:"adhoc",action_label:"Demo",user:"admin",_time:a},{status:"failure",action_mode:"saved",action_label:"Demo",user:"admin",_time:a}]},getTemplate:function(){return'<% if(error_message) { %>                         <i class="icon-error"> </i> <%- error_message %>                     <% } else if(performing_search) { %>                         Obtaining list of adaptive responses...                     <% } else if(entries === null || entries.length === 0) { %>                         <i class="icon-info-circle"> </i> No Adaptive Responses found                      <% } else { %>                     <table class="table table-chrome adaptive-responses-table">                     <thead>                         <tr role="row">                             <th>Response</th>                             <th>Mode</th>                             <th>Time</th>                             <th>User</th>                             <th>Status</th>                         </tr>                     </thead>                     <tbody>                         <% for(var c = 0; c < entries.length; c++){ %>                         <tr>                             <td>                             <% if(makeResultsURI) { %>                                 <a target="_blank" href="<%- makeResultsURI(sid, rid, entries[c].action_name, entries[c]._time, entries[c].action_drilldown_uri)  %>"><%- entries[c].action_label %></a></td>                             <% } else { %>                                 <%- entries[c].action_label %></a>                             <% } %>                             <td><%- entries[c].action_mode %></td>                             <td><%- entries[c]._time %></td>                            <td><%- entries[c].user %></td>                            <% if(entries[c].action_status === "success") { %>                             <td class="<%- entries[c].action_status %>"><i class="icon-check"> </i><%- entries[c].action_status %></td>                             <% } else if(entries[c].action_status === "failure") { %>                             <td class="<%- entries[c].action_status %>"><i class="icon-error"> </i><%- entries[c].action_status %></td>                             <% } else if(entries[c].action_status === "running") { %>                             <td class="<%- entries[c].action_status %>"><i> </i><%- entries[c].action_status %></td>                             <% } else { %>                             <td class="<%- entries[c].action_status %>"><%- entries[c].action_status %></td>                             <% } %>                         </tr>                         <% } %>                     </tbody>                     </table>                     <% if(introspection_drilldown_uri) { %>                     <div class="adaptive-responses-introspection-link">                         <a target="_blank" href="<%- introspection_drilldown_uri %>">View Adaptive Response Invocations</a>                     </div>                     <% } %>                     <% } %>'},gotActions:function(){this.render()},stringReplaceAll:function(a,b){for(var c in b)a=a.split("$"+c+"$").join(b[c]);return a},makeResultsURI:function(a,b){var c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;null!==e&&void 0!==e&&0!==e.trim().length||(e=this.results_drilldown_uri);var f=null;null!==d&&(f=Date.parse(d)/1e3),earliest="",latest="",f&&(earliest=f-300,latest=f+300);var g={sid:a,rid:b,time:d,earliest:earliest,latest:latest,action_name:c};return this.stringReplaceAll(e,g)},makeIntrospectionURI:function(a,b){var c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;null===d&&(d=this.introspection_drilldown_uri);var e="",f="";if(null!==c){var g=this.getEarliestAndLatest(c,300);e=g[0],f=g[1]}var h={sid:a,rid:b,earliest:e,latest:f};return this.stringReplaceAll(d,h)},refresh:function(){var a=this;this.error_message=null,this.sid&&this.rid?e.when(this.fetchActionsForNotable(this.sid,this.rid)).done(function(b){a.gotActions()}).fail(function(b){a.render()}):console.warn("Cannot refresh the results since an SID or RID was not provided")},getEarliestAndLatest:function(a){for(var b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,c=null,d=null,e=null,f=0;f<a.length;f++)e=Date.parse(a[f]._time)/1e3,(null===d||e>d)&&(d=e+b),(null===c||e<c)&&(c=e-b);return[c,d]},render:function(){this.$el.html(a.template(this.getTemplate(),{error_message:this.error_message,entries:this.entries,sid:this.sid,rid:this.rid,search:this.search,results_sid:this.results_sid,performing_search:this.performing_search,makeResultsURI:this.makeResultsURI.bind(this),introspection_drilldown_uri:this.makeIntrospectionURI(this.sid,this.rid,this.entries)}))}});return h});