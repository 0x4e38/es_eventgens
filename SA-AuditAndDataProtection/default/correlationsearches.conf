
[Audit - Personally Identifiable Information Detection - Rule]
security_domain  = audit
severity         = high
rule_name        = Personally Identifiable Information Detected
description      = Detects personally identifiable information (PII) in log files. Some software will inadvertently provide sensitive information in log files and thus causing the information to be exposed unnecessarily to those reviewing the log files.
rule_title       = Personally Identifiable Information Detected
rule_description = Splunk has detected potentially sensitive information ($pii$ issued by $iin_issuer$) in the following event.
nes_fields       = pii
drilldown_name   = View detected PII for $pii$
drilldown_search = NOT sourcetype=stash | `get_integer_seq` | lookup luhn_lite_lookup integer_seq OUTPUTNEW pii,pii_clean | search pii="$pii$"
default_status   =
default_owner    = 

[Audit - Anomalous Audit Trail Activity Detected - Rule]
security_domain  = audit
severity         = low
rule_name        = Anomalous Audit Trail Activity Detected
description      = Discovers anomalous activity such as the deletion of or clearing of log files. Attackers oftentimes clear the log files in order to hide their actions, therefore, this may indicate that the system has been compromised.
rule_title       = Anomalous Audit Trail Activity Detected On $dest$
rule_description = Anomalous audit trail activity (such as clearing or deletion of log entries) was noted on the device $dest$
nes_fields       = dest,signature
drilldown_name   = View anomalous audit trail activity on device $dest$
drilldown_search = tag=audit (tag=stop OR tag=delete) dest="$dest$"
default_status   =
default_owner    =
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":    "Change_Analysis",\
         "object":       "Auditing_Changes",\
         "eventFilter":  "('All_Changes.action'=\"cleared\" OR 'All_Changes.action'=\"stopped\")",\
         "aggregates":   [{"function": "max", "attribute": "_time", "alias": "lastTime"},\
                          {"function": "latest", "attribute": "_raw", "alias": "orig_raw"},\
                          {"function": "count"}\
                         ],\
         "splitby":      [\
                          {"attribute": "All_Changes.dest", "alias": "dest"},\
                          {"attribute": "All_Changes.result", "alias": "signature"}\
                         ],\
         "summariesonly": "1"\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["dest","signature"]\
}

[Audit - Expected Host Not Reporting - Rule]
security_domain  = audit
severity         = medium
rule_name        = Expected Host Not Reporting
description      = Discovers hosts that are longer reporting events but should be submitting log events. This rule is used to monitor hosts that you know should be providing a constant stream of logs in order to determine why the host has failed to provide log data.
rule_title       = Expected Host Not Reporting ($orig_host$)
rule_description = The Splunk device $orig_host$ is expected to be forwarding data to Splunk and has not in the last $dayDiff$ days.
nes_fields       = orig_host
drilldown_name   = View events from $orig_host$
drilldown_search = host="$orig_host$"
default_status   =
default_owner    =

[Audit - Potential Gap in Data - Rule]
security_domain  = audit
severity         = medium
rule_name        = Potential Gap in Data
description      = Detects gaps caused by the failure of the search head. If saved searches do not execute then there may be gaps in summary data.
rule_title       = No Saved Searches Executed Recently
rule_description = No saved searches were recently executed over a five minute period. If saved searches do not execute then there may be gaps in summary data.
nes_fields       = 
drilldown_name   = View search scheduler log
drilldown_search = | datamodel "Splunk_Audit" "Scheduler_Activity" search | where 'Scheduler_Activity.status'="success" AND ('Scheduler_Activity.app'="Splunk_*" OR 'Scheduler_Activity.app'="SA-*" OR 'Scheduler_Activity.app'="DA-*" OR 'Scheduler_Activity.app'="SplunkEnterpriseSecuritySuite" OR 'Scheduler_Activity.app'="SplunkPCIComplianceSuite")
default_status   =
default_owner    =
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":     "Splunk_Audit",\
         "object":        "Scheduler_Activity",\
         "eventFilter":   "'Scheduler_Activity.status'=\"success\" AND ('Scheduler_Activity.app' LIKE \"Splunk_%\" OR 'Scheduler_Activity.app' LIKE \"SA-%\" OR 'Scheduler_Activity.app' LIKE \"DA-%\" OR 'Scheduler_Activity.app'=\"SplunkEnterpriseSecuritySuite\" OR 'Scheduler_Activity.app'=\"SplunkPCIComplianceSuite\")",\
         "aggregates":    [{"function": "count"}],\
         "resultFilter":  {"field": "count", "comparator": "=", "value": "0"},\
         "summariesonly": "1"\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["const_dedup_id"]\
}
